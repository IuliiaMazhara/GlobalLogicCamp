import objects.CalculatorPage;
import org.junit.*;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import tests.BaseTest;

import java.util.Arrays;
import java.util.Collection;

@RunWith(Parameterized.class)
public class DataDrivenCalculatorTest extends BaseTest {

    private static CalculatorPage calc;

    @Parameterized.Parameter
    public String expression;

    @Parameterized.Parameter(1)
    public String expected;

    @BeforeClass
    public static void setup() {
        calc = new CalculatorPage(driver);
        calc.open();
    }

    @Before
    public void cleanup() {
        calc.clear();
    }

    @Test
    public void calculator_DataDrivenTest() {
        Assert.assertEquals(expected, calc.calculate(expression));
    }

    @Parameterized.Parameters(name = "Test: {0}={1}")
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{

                //The behavior of the SUT was checked against the Windows calculator



                //The addition test
                {"0+0", "0"},
                {"123456789123456789123456789+1", "1.2345678912345679e+26"},
                {"-1.23456789123456789123456789123456789123456789123456789123456789123456789+1", "0.23456789123456789123456789123456789123456789123456789123456789123456789"},
                {"-123456789123456789123456789123456789123456789123456789123456789123456789+++1", "-1.2345678912345678e+71"},
                {"2+2+", "4"},
                {"3-/x+3", "6"},
                {"123456789123456789123456789123456789123456789123456789123456789123456789+123456789123456789123456789123456789123456789123456789123456789123456789", "2.4691357824691356e+71"},
                {"++++++++", "0"},
                {"+9+6", "15"},

                //The subtraction test
                {"0-0", "0"},
                {"-0-3", "-3"},
                {"-1-----3", "-4"},
                {"123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789-123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789", "0"},
                {"---", "0"},
                {"-7-4", "-11"},
                {"9-69", "60"},

                //The multiplication test
                {"0x0", "0"},
                {"0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789x1", "0.123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789"},
                {"3+-/x6", "18"},
                {"0.1x0.1", "0.01"},
                {"x5x2", "0"},
                {"0.2x0.2x0.2", "0.008"},

                //Division testing
                {"0/0", "The operation is prohibited"},
                {"8/0", "Infinity"},
                {"1/1", "1"},
                {"/12/12", "0"},
                {"12///12", "1"},
                {"121234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891234567891/12", "1.0288065760288065e+116"},

                //The decimal point testing
                {"0+2.......3", "2.3"},
                {"0.1+0........3", "0.4"},
                {"1.1...+2", "3.1"},
                {"1.1..2.+2.1.1", "3.23"},
                {"1.1..2.+2.1.1+3.1", "6.33"},

                //The missing operand testing
                {"8+", "16"},
                {"8-", "0"},
                {"8x", "64"},
                {"8/", "1"},
                {"+---------45", "-45"},
                {"+-x/", "The operation is prohibited"},
                {"+90", "90"},
                {"-90", "-90"},
                {"x90", "0"},
                {"/90", "0"},
                {"=", "0"},
                {"5=", "5"},


        });
    }

    @AfterClass
    public static void stop() {
        driver.quit();
    }
}
